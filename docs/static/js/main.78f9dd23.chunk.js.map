{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GitExpertApp.js","index.js"],"names":["CategoryAdd","setCategorie","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","result","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","GifGridItem","src","alt","GifGrid","className","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAyCeA,EArCK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAbe,SAACC,GACtBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,IACdH,GAAa,SAAAS,GAAG,MAAI,CAACP,QAQzB,SAEI,uBAAOQ,KAAK,OACRC,MAAOT,EACPU,YAAY,eACZC,SArBa,SAACR,GACtBF,EAAcE,EAAES,OAAOH,a,+BCShBI,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,gDACyCC,UAAUH,GADnD,+DAESI,MAAMF,GAFf,cAENG,EAFM,gBAGWA,EAAOC,OAHlB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT9B,kBAYLM,GAZK,4CAAH,sDCyBEO,EAvBM,SAACf,GAClB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENpB,EAAQC,GAAUoB,MAAK,SAAAC,GACnBC,YAAW,WACPJ,EAAS,CACLX,KAAMc,EACNL,SAAS,IAEbO,QAAQC,IAAIH,KACb,UAGR,CAACrB,IAEGiB,GCLIQ,G,KAfK,SAAC,GAAwB,IAAtBd,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC9B,OACI,mCAII,qBAAewB,IAAKxB,EAAKyB,IAAKf,GAAnBD,OC2BRiB,EAhCC,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAEf,EAAkCe,EAAaf,GAAjCa,EAAd,EAAQN,KAAcS,EAAtB,EAAsBA,QAItB,OACI,gCACI,6BAAKhB,IACJgB,GAAW,mBAAGa,UAAU,gEAAb,wBACZ,qBAAKA,UAAU,+EAAf,SAGQhB,EAAOJ,KAAI,SAAAC,GACP,OAEI,cAAC,EAAD,eACQA,GADUA,EAAIC,aCSnCmB,MAzBf,WAEI,MAAmC7C,mBAAS,CAAC,WAA7C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAIA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,aAAcA,IAC3B,uBACA,6BAEQ+C,EAAWtB,KAAI,SAAAT,GACX,OAAQ,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCb9CgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.78f9dd23.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst CategoryAdd = ({ setCategorie }) => {\r\n    const [inputValue, setinputValue] = useState(\"\");\r\n\r\n    const handleInputValue = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleIputSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorie(cat => [inputValue, ...cat]);\r\n            setinputValue(\"\");\r\n            setCategorie(cat => [inputValue]);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleIputSubmit}>\r\n\r\n            <input type=\"text\"\r\n                value={inputValue}\r\n                placeholder=\"search a gif\"\r\n                onChange={handleInputValue}\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategorie: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default CategoryAdd;\r\n","\r\nconst getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=6Kjt83Rdh6kfBz7q3OC3BnjT7CKGgLrh`;\r\n    const result = await fetch(url);\r\n    const { data } = await result.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}\r\n\r\nexport default getGifs;\r\n","import { useEffect, useState } from \"react\"\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(imgs => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                console.log(imgs);\r\n            }, 2000);\r\n        });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react';\r\nimport \"../index.css\";\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            < img key={id} src={url} alt={title} />\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\" animate__animated animate__flash animate__infinite\tinfinite\">Loading...</p>}\r\n            <div className=\"_container__grid__imgs animate__animated animate__fadeInUp animate__delay-2s\">\r\n\r\n                {\r\n                    images.map(img => {\r\n                        return (\r\n\r\n                            <GifGridItem key={img.id}\r\n                                {...img}\r\n                            />\r\n\r\n\r\n                        )\r\n\r\n                    })\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nfunction GitExpertApp() {\r\n\r\n    const [categories, setCategorie] = useState([\"Naruto\"]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <CategoryAdd setCategorie={setCategorie} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                        return (<GifGrid key={category} category={category} />)\r\n                    })\r\n\r\n                }\r\n\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GitExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}